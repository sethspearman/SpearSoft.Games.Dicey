<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADw
        BwAAAk1TRnQBSQFMAwEBAAEYAQABGAEAASABAAEgAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABIAYAAUASAAMDAQQBPAE9AT4BaAE/AUABQQFwAT8BQAFBAXABPwFAAUEBcAE/AUABQQFw
        AT8BQAFBAXABPwFAAUEBcAE/AUABQQFwAT8BQAFBAXABPwFAAUEBcAE/AUABQQFwAT8BQAFBAXABPAE9
        AT4BaAMDAQT/AMUAATwBPQE+AWgBAAFyAcYB/wEDAXEBvwH9AQMBcQG/Af0BAwFxAb8B/QEDAXEBvwH9
        AQMBcQG/Af0BAwFxAb8B/QEDAXEBvwH9AQMBcQG/Af0BAwFyAb8B/QEDAXIBvwH9AQMBcgG/Af0BAAFy
        AcYB/wE8AT0BPgFo/wDFAAE/AUABQQFwAQMBcQG/Af0BAAGaAf4B/wEAAaAB/gH/AQABpQH+Af8BAAGr
        Af4B/wEAAbEB/gH/AQABtwL/AQABvAL/AQABwgL/AQABxwL/AQABzAL/AQABzQL/AQYBcQHAAfsBPwFA
        AUEBcP8AxQABPwFAAUEBcAEDAXEBvwH9AQABnQH+Af8BAAGjAf4B/wEAAakB/gH/AQABrgH+Af8BAAGw
        AfoB/wEAAakB7AH/AQABvgH9Af8BAAHFAv8BAAHKAv8BAAHPAv8BAAHMAv8BBgFxAcAB+wE/AUABQQFw
        /wDFAAE/AUABQQFwAQMBcQG/Af0BAAGfAf4B/wEAAaUB/gH/AQABqgH+Af8BAAGwAf4B/wEAAaEB5gH/
        AQABlgHXAf8BAAG3AfgB/wEAAcQC/wEAAccC/wEAAccC/wEAAcUC/wEGAXABwAH7AT8BQAFBAXD/AMUA
        AT8BQAFBAXABAwFxAb8B/QEAAaAB/gH/AQABpQH+Af8BAAGqAf4B/wEAAa8B/gH/AQABlQHZAf8BAAGP
        Ac4B/wEAAbAB8wH/AQABvwL/AQABwAL/AQABvwL/AQABvQL/AQYBcAHAAfsBPwFAAUEBcP8AxQABPwFA
        AUEBcAEDAXEBvwH9AQABnwH+Af8BAAGkAf4B/wEAAakB/gH/AQABpgH1Af8BAAFsAasB/wEAAYcBxwH/
        AQABngHhAf8BAAG4Af4B/wEAAbgC/wEAAbcC/wEAAbUC/wEGAXABwAH7AT8BQAFBAXD/AMUAAT8BQAFB
        AXABAwFxAb8B/QEAAZ0B/gH/AQABogH+Af8BAAGmAf4B/wEAAaQB9wH/AQABYQGeAf8BAAF6Ab0B/wEA
        AZUB3AH/AQABsAH9Af8BAAGwAf4B/wEAAa8B/gH/AQABrQH+Af8BBgFvAcAB+wE/AUABQQFw/wDFAAE/
        AUABQQFwAQMBcQG/Af0BAAGaAf4B/wEAAZ4B/gH/AQABogH+Af8BAAGkAf4B/wEAAZUB5AH/AQABigHT
        Af8BAAGiAfQB/wEAAakB/gH/AQABqAH+Af8BAAGnAf4B/wEAAaUB/gH/AQYBbwHAAfsBPwFAAUEBcP8A
        xQABPwFAAUEBcAEDAXEBvwH9AQABlgH8Af8BAAGZAfwB/wEAAZsB/AH/AQABngH8Af8BAAGfAfwB/wEA
        AaAB/AH/AQABoQH8Af8BAAGgAfwB/wEAAZ8B/AH/AQABngH8Af8BAAGcAfwB/wEGAW8BwAH7AT8BQAFB
        AXD/AMUAATkCOgFgAQABcgHGAf8BAAFyAcYB/wEAAXIBxgH/AQABcgHGAf8BAAFyAcYB/wEAAXIBxgH/
        AQABcgHGAf8BAAFyAcYB/wEAAXIBxgH/AQABcgHGAf8BAAFyAcYB/wEAAXIBxgH/AQABcgHGAf8BOQI6
        AWD/AMgAAQEDMgFQAUwBWQFdAc0BGQFCAUwB/wFKAUwBTQGPATUCNgFYATUCNgFYATUCNgFYATUCNgFY
        ATUCNgFYAUgBSwFMAYwBFwFAAUoB/wFMAVkBXQHNAzIBUAMAAQH/AM0AAlkBUQHUAUEBQgEuAf0DDQES
        FAADDAEQAjIBGAH9AlQBTQHR/wDVAAJaAVYBvQFWAVkBRQH/AzUBVhQAAzABTQI2ARwB/wJSAVABtP8A
        1QADTAGQAWkBcQFfAf8CWAFUAcsUAAJPAUwBwQJCASgB/wNGAYD/ANUAAxABFgFpAW8BaAHmAWoBdAFk
        Af4BWAFZAVQByAMkATYEAAMjATMCUQFNAb0CPAEhAf4CVAFKAdoDDQES/wDZAAMxAU4BaQFyAWgB6QFj
        AWwBWgH/AVMBVwFDAf4CQgEyAfUCNAEcAf4COgEfAf8CUgFIAd4DKQE+/wDhAAMSARkCUQFQAZ4CXAFX
        AdEBUwFUAUYB7AJUAU4BygJLAUoBjgMQARX/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A8QABQgFNAT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAEC
        FgAD/wIAAQEC/w0AAQEC/w0AAQEC/w0AAQEC/w0AAQEC/w0AAQEC/w0AAQEC/w0AAQEC/w0AAQEC/w0A
        AQEC/w0AAQEC/w0AAQEC/wwAAscC/wwAAscC/wwAAscC/wwAAcEBBwL/DAAB4AEPAv8MAAHwAR8C/wwA
        BP8MAAT/DAAE/wwABP8MAAT/DAAE/wwABP8MAAT/DAAE/wwABP8MAAT/DAAE/wwABP8MAAT/DAAL
</value>
  </data>
</root>